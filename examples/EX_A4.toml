# Simulation:
# build/bin/BEEP inputfile="examples/EX_A4.toml" mode="sim" 

# Inference using MAP estimate: 
# mpirun -n 20 build/bin/BEEP inputfile="examples/EX_A4.toml" mode="map"

description = "Objective: Introduce branching and merging (which is when two compartments have transitions which merge back into a single compartment).  Implementation: ‘trans’ denotes two transition leaving the exposed E compartment (corresponding to two levels of infectivity) and two transitions merging back to a final recovered R state.  Model: The SEIAR model contains an exposed E compartment which branches such that infected individuals can either become symptomatic I or asymptomatic A with associated branching probabilities and relative infectivity. Individuals finally pass to a recovered R state. The reproduction number R_t is taken to be constant (i.e. the contact rate between individuals remains the same over time), as well as a constant external force of infection.  Data: Weekly number of E→I cases and the population in the R compartment.  Inference: The reproduction number R_t, the latent and infectious periods and symptomatic branching probabilities." 

time_format = "number"
start = "0"
end = "140"

datadir = "examples/Data_EX_A4"
outputdir = "examples/Output_EX_A4"

comps = [
{name="S"},
{name="E", dist="Exp", mean_param="T_E", mean_value="3", mean_prior="Uniform(1,10)"},
{name="I", dist="Exp", mean_param="T_I", mean_value="4", inf_value="1", mean_prior="Uniform(1,10)"},
{name="A", dist="Exp", mean_param="T_I", mean_value="4", inf_value="0.5", mean_prior="Uniform(1,10)"},
{name="R"},
]

trans = [
{from="S", to="E", infection="yes"},
{from="E", to="I", prob_value="0.6", prob_prior="Dir(1)"},
{from="E", to="A", prob_value="*", prob_prior="Dir(1)"},
{from="I", to="R"},
{from="A", to="R"}
] 

R_spline = [{ value="2", prior="Uniform(0.5,4)"}]

efoi_spline = [{ value="1"}]

areas = "population.csv"

data_tables = [
{type="transition", observation="E->I", timestep="7", obsmodel="normal 10%", file="E-I.csv"},
{type="population", observation="R", timestep="7", obsmodel="normal 10%", file="R.csv"},
]

state_outputs = [
{plot_name="Dynamics", type="population", observation="S", line_colour="green"},
{plot_name="Dynamics", type="population", observation="A", line_colour="cyan"},
{plot_name="Dynamics", type="population", observation="I", line_colour="red"},
{plot_name="Dynamics", type="population", observation="R", line_colour="blue"}
]

plot_param_values = "true"

