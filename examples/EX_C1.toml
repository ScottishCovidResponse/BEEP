# Simulation:
# ./beepmbp inputfile="examples/EX_C1.toml" mode="sim" 

# Inference using MAP estimate: 
# mpirun -n 20 ./beepmbp inputfile="examples/EX_C1.toml" mode="map"

description = "Objective: This introduces a simple model for spatial stratification.  Implementation: ‘areas’ defines a file which provides information about the populations is four geographical regions. ‘geo-mixing-matrix’ defines a file which gives information about a 4×4 matrix that captures the relative mixing of individuals within and between regions (note, this matrix only needs to be specified up to a constant factor). Finally, ‘area-effect’ accounts for region-specific modifications to the disease transmission rate.  Model: An SIRD branching spatial model with four geographical areas: Region A, Region B, Region C, and Region D. The infected individuals can either recover or die, with associated branching probabilities. The reproduction number R_t remains constant (i.e. the contact rate between individuals remains the same over time), as well as a constant external force of infection.  Data: Weekly number of S→I cases and I→D deaths, separately for each region.  Inference: The reproduction number R_t (with a region-specific modifying factors), infectious period and branching probabilities." 

time_format = "number"
start = "0"
end = "140"

datadir = "examples/Data_EX_C1"
outputdir = "examples/Output_EX_C1"

geo_mixing_matrix = "geo_mixing_matrix.csv"
	 
area_effect = {value="[area effect:population.csv]", prior="MDir(0.5)"}
	 
comps = [
{name="S"},
{name="I", dist="Exp", mean_value="6", inf_value="1", mean_prior="Uniform(1,10)"},
{name="R"},
{name="D"}
]

trans = [
{from="S", to="I", infection="yes"},
{from="I", to="R", prob_value="0.8", prob_prior="Dir(1)"},
{from="I", to="D", prob_value="*", prob_prior="Dir(1)"}
] 

R_spline = [{ value="2", prior="Uniform(0.5,4)"}]

efoi_spline = [{ value="1"}]

areas = "population.csv"

data_tables = [
{type="transition", observation="S->I", timestep="7", obsmodel="normal 10%", geo_dep="area", file="S-I.csv"},
{type="transition", observation="I->D", timestep="7", obsmodel="normal 10%", geo_dep="area", file="I-D.csv"},
]

state_outputs = [
{plot_name="Dynamics", type="population", observation="S", line_colour="green"},
{plot_name="Dynamics", type="population", observation="I", line_colour="red"},
{plot_name="Dynamics", type="population", observation="R", line_colour="blue"},
{plot_name="Dynamics", type="population", observation="D", line_colour="black"}
]

plot_param_values = "true"

